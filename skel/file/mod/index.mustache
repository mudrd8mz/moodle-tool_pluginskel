{{!
    This file is part of Moodle - https://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template file/mod/index

    Activity index.php file.

    Context variables required for this template:
    * component
    * copyright

    Example context (json):
    {
        "component": "mod_test",
        "copyright": "2021 David Mudr√°k <david@moodle.com>"
    }
}}
{{< common/boilerplate_php }}
{{$ description }}Display information about all the {{ component }} modules in the requested course.{{/ description }}
{{$ package }}{{ component }}{{/ package }}
{{$ copyright }}{{ copyright }}{{/ copyright }}
{{/ common/boilerplate_php }}

require_once(__DIR__.'/lib.php');

$id = required_param('id', PARAM_INT);

$course = $DB->get_record('course', ['id' => $id], '*', MUST_EXIST);
require_course_login($course);

$coursecontext = context_course::instance($course->id);

$event = \{{component_type}}_{{ component_name }}\event\course_module_instance_list_viewed::create([
    'context' => $modulecontext,
]);
$event->add_record_snapshot('course', $course);
$event->trigger();

$PAGE->set_url('/mod/{{ component_name }}/index.php', ['id' => $id]);
$PAGE->set_title(format_string($course->fullname));
$PAGE->set_heading(format_string($course->fullname));
$PAGE->set_context($coursecontext);

echo $OUTPUT->header();

$modulenameplural = get_string('modulenameplural', '{{ component }}');
echo $OUTPUT->heading($modulenameplural);

${{ component_name }}s = get_all_instances_in_course('{{ component_name }}', $course);

if (empty(${{ component_name }}s)) {
    notice(get_string('no${{ component_name }}instances', '{{ component }}'), new moodle_url('/course/view.php', ['id' => $course->id]));
}

$table = new html_table();
$table->attributes['class'] = 'generaltable mod_index';

if ($course->format == 'weeks') {
    $table->head  = [get_string('week'), get_string('name')];
    $table->align = ['center', 'left'];
} else if ($course->format == 'topics') {
    $table->head  = [get_string('topic'), get_string('name')];
    $table->align = ['center', 'left', 'left', 'left'];
} else {
    $table->head  = [get_string('name')];
    $table->align = ['left', 'left', 'left'];
}

foreach (${{ component_name }}s as ${{ component_name }}) {
    if (!${{ component_name }}->visible) {
        $link = html_writer::link(
            new moodle_url('/mod/{{ component_name }}/view.php', ['id' => ${{ component_name }}->coursemodule]),
            format_string(${{ component_name }}->name, true),
            ['class' => 'dimmed']);
    } else {
        $link = html_writer::link(
            new moodle_url('/mod/{{ component_name }}/view.php', ['id' => ${{ component_name }}->coursemodule]),
            format_string(${{ component_name }}->name, true));
    }

    if ($course->format == 'weeks' || $course->format == 'topics') {
        $table->data[] = [${{ component_name }}->section, $link];
    } else {
        $table->data[] = [$link];
    }
}

echo html_writer::table($table);
echo $OUTPUT->footer();
